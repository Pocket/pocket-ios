// @generated
// This file was automatically generated and should not be edited.

import ApolloAPI

/// Input for creating a new User-highlighted passage on a SavedItem.
public struct CreateHighlightInput: InputObject {
  public private(set) var __data: InputDict

  public init(_ data: InputDict) {
    __data = data
  }

  public init(
    id: GraphQLNullable<String> = nil,
    quote: String,
    patch: String,
    version: Int,
    itemId: ID,
    note: GraphQLNullable<String> = nil
  ) {
    __data = InputDict([
      "id": id,
      "quote": quote,
      "patch": patch,
      "version": version,
      "itemId": itemId,
      "note": note
    ])
  }

  /// Optionally, a client-generated UUID to identify the highlight.
  /// If one is not passed, it will be created. Must be in UUID format,
  /// or will fail generation. Will not overwrite existing data if there
  /// is an ID collision.
  public var id: GraphQLNullable<String> {
    get { __data["id"] }
    set { __data["id"] = newValue }
  }

  /// The full text of the highlighted passage. Used as a fallback for
  /// rendering highlight if the patch fails.
  public var quote: String {
    get { __data["quote"] }
    set { __data["quote"] = newValue }
  }

  /// Patch string generated by 'DiffMatchPatch' library, serialized
  /// into text via `patch_toText` method.
  /// Format is similar to UniDiff but is character-based.
  /// The patched text depends on version. For example, the version 2
  /// patch surrounds the highlighted text portion with a pair of
  /// sentinel tags: '<pkt_tag_annotation></pkt_tag_annotation>'
  /// Reference: https://github.com/google/diff-match-patch
  public var patch: String {
    get { __data["patch"] }
    set { __data["patch"] = newValue }
  }

  /// Annotation data version
  public var version: Int {
    get { __data["version"] }
    set { __data["version"] = newValue }
  }

  /// The ID of the Item that should be annotated in the User's list
  public var itemId: ID {
    get { __data["itemId"] }
    set { __data["itemId"] = newValue }
  }

  /// Optional note generated by User
  public var note: GraphQLNullable<String> {
    get { __data["note"] }
    set { __data["note"] = newValue }
  }
}
